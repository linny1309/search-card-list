{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","kpi","name","type","score","style","backgroundColor","net","CardList","kpis","map","id","SearchBox","placeholder","handleChange","classNam","onChange","App","e","setState","searchField","target","value","icons","state","this","filteredKpis","filter","toLowerCase","includes","searchbox","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0a40593.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nconst netColor = (net) => {\r\n    if (net < 0) \r\n        return \"red\"\r\n    else if (net > 0)\r\n        return \"green\"\r\n    else \r\n        return \"gray\"\r\n}\r\n\r\nexport const Card = (props) => (\r\n    <div>\r\n        <div className=\"card-container\">\r\n            <div className=\"justify-content-center\">\r\n            </div>\r\n            <div className=\"justify-content-center\">\r\n                <p className=\"text-align-center font-weight-bold\"> {props.kpi.name} </p> \r\n            </div>\r\n            <div className=\"justify-content-center\">         \r\n                <p> {props.kpi.type} </p> \r\n            </div>\r\n            <div className=\"kpi-score\"> Score {props.kpi.score}</div> \r\n            <div style={{backgroundColor: netColor(props.kpi.net)}} className=\"kpi-net\"> Net {props.kpi.net}</div>\r\n        </div>\r\n    </div>\r\n)","import React from 'react'\r\nimport { Card } from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n        {props.kpis.map(kpi => (\r\n            <Card key={kpi.id} kpi={kpi} />\r\n        ))}\r\n    </div>\r\n);","import React from 'react'\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n    type='search' \r\n    classNam=\"search\"\r\n    placeholder={placeholder} \r\n    //The second callback function is called after because setState is async \r\n    onChange={handleChange}\r\n  />\r\n)\r\n","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    let icons = [\"bar_chart\",\"show_chart\",\"pie_chart\",\"bubble_chart\",\"scatter_plot\",\"leak_add\",\"multiline_chart\",\"bar_chart\"];\n\n    this.state = {\n      kpis: [{\n        name: \"Paid Clicks by Application Type\",\n        type: \"Bar Chart\",\n        id: \"id1\",\n        net: 300000,\n        score: 909000,\n        icons: icons[0]\n      }, \n      {\n        name: \"Paid Search Clicks per Hour by Website\",\n        type: \"Line Chart\",\n        id: \"id2\",\n        net: -1000,\n        score: 6000,\n        icons: icons[1]\n      },\n      {\n        name: \"Brand A Market Share\",\n        type: \"Bubble Chart\",\n        id: \"id3\",\n        net: 3.2,\n        score: 2.2,\n        icons: icons[3]\n      },\n      {\n        name: \"Total Investment vs Total ROI over Years of Investment\",\n        type: \"Pie Chart\",\n        id: \"id4\",\n        net: 33000000,\n        score: 2000000,\n        icons: icons[2]\n      }, \n      {\n        name: \"Number of Orders vs Age\",\n        type: \"Multi Chart\",\n        id: \"id5\",\n        net: 5.5,\n        score: 7,\n        icons: icons[6]\n\n      },\n      {\n        name: \"Customer Behavior Spectrum\",\n        type: \"Radar Chart\",\n        id: \"id6\",\n        net: 6.0,\n        score: -5,\n        icons: [5]\n      },\n      {\n        name: \"Bulk Orders Placed vs Bulk Orders per Customer\",\n        type: \"Scatter Chart\",\n        id: \"id7\",\n        net: 4,\n        score: 49,\n        icons: icons[4]\n      },\n      {\n        name: \"Quantity Ordered\",\n        type: \"Gran Chart\",\n        id: \"id8\",\n        net: -12,\n        score: 126,\n        icons: icons[7]\n      }],\n      searchField: ''\n    }\n  }\n  /*If you want to take data from an endpoint\n  /*\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({kpi: users}));\n  }\n  */\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    //Just a quicker way to grab state values \n    const { kpis, searchField } = this.state;\n    const filteredKpis = kpis.filter(kpi => \n      kpi.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className=\"background\">\n        <br></br>\n          <div className=\"justify-content-center\" placeholder=\"Search\">\n            <SearchBox \n              searchbox placeholder=\"Search KPIs\"\n              handleChange = {this.handleChange}\n            />\n          </div>\n          <br></br>\n          <CardList kpis={filteredKpis}>\n          </CardList>\n          <br></br>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}